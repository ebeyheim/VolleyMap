.main-container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: 100px; /* Space between court and annotations */
  padding: 20px;
  height: calc(100vh - 60px); /* Subtract header height */
  box-sizing: border-box;
}

/* Arrow styling */
.arrow-svg {
  position: absolute;
  pointer-events: none;
}

.anchor-point {
  position: absolute;
  width: 8px; /* Reduced from 10px to account for the border */
  height: 8px; /* Reduced from 10px to account for the border */
  border-radius: 50%;
  border: 2px dashed; /* 2px dashed border */
  background-color: transparent; /* Hollow */
  cursor: pointer;
  z-index: 1100;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);
  box-sizing: content-box; /* Ensure border is added to the element size */
}

.anchor-point:hover {
  transform: scale(1.5);
  transition: transform 0.2s ease;
}

.arrow-body {
  position: absolute;
  background-color: transparent;
  cursor: move;
  min-width: 20px;
  min-height: 10px;
  z-index: 1090;
  border: 1px dashed transparent;
}

.arrow-body:hover {
  border: 1px dashed rgba(0, 0, 0, 0.3);
}

/* For toolbar preview */
.shape-preview.arrow::before {
  content: "→";
  font-size: 30px;
  font-weight: bold;
  color: #1e1e1e;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* In your CSS */
.toolbar .toolbar-item .shape-preview.arrow::before {
  content: "→";
  font-size: 30px;
  font-weight: bold;
  color: #1e1e1e;
  padding: auto; /* Center the arrow */
  display: flex;
}

.shape.arrow {
  width: 0px; /* No width */
  height: 0px;
  background-color: none; /* No background color */
  border: none; /* Remove any border */
  position: absolute;
}

.header {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  width: 98%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #f0f0f0;
  padding: 10px 20px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 101;
}

.header-logo {
  height: 40px; /* Adjust the height of the logo */
  width: auto; /* Maintain aspect ratio */
  margin-right: 15px; /* Add spacing between the logo and the title */
  display: inline-block; /* Ensure it aligns with the title */
}

/* Volleyball shape in the toolbar */
.volleyball-icon {
  width: 40px; /* Adjust size for the toolbar */
  height: 40px;
  object-fit: contain;
  padding: 15px; /* Ensure the image fits within the bounds */
}

/* Volleyball shape on the court */
.shape.volleyball {
  width: 40px; /* Adjust size for the court */
  height: 40px;
  background-color: transparent !important; /* Remove the black square */
  border: none; /* Remove any border */
  position: absolute;
}

.shape.volleyball img {
  width: 100%; /* Make the image fill the shape */
  height: 100%;
  object-fit: contain; /* Ensure the image fits within the bounds */
}

/* Navigation Button */
.nav-btn {
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 14px;
}

.nav-btn:hover {
  background-color: #0056b3;
  transform: scale(1.05);
  transition: all 0.3s ease;
}

.app-title {
  font-size: 24px;
  font-weight: bold;
}

/* Page Title */
.page-title {
  font-size: 20px;
  font-weight: bold;
  margin-right: 20px; /* Space between title and Show Zones button */
}

/* Play Title Input */
.title {
  flex-grow: 1; /* Allow the input to take up available space */
  text-align: center;
}

.play-title-input {
  width: 40%; /* Center the input */
  padding: 10px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 5px;
  text-align: center;
}
.play-title-input:hover {
  border-color: #007bff; /* Change border color on hover */
}

/* Left section: Court and Show Zones button */
.left-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px; /* Space between the button and court */
  height: 100%; /* Full height */
  justify-content: center; /* Center content vertically */
  margin-top: 80px; /* Add margin to avoid overlapping with the header */
}

.court-container {
  width: 700px; /* Match the court width */
  height: 900px; /* Match the new court height */
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.court {
  align-self: center;
  position: relative;
  width: 550px; /* Keep the width unchanged */
  height: 815px; /* Reduce the height from 815px to 700px */
  border: 1.5px solid #000;
  background: #fcffef; /* Solid background color */
  overflow: visible;
}

/* Centerline */
.court::before {
  content: "";
  position: absolute;
  top: 50%; /* Center of the court */
  left: -60px; /* Extend beyond the left edge */
  width: calc(100% + 120px); /* Extend beyond the right edge */
  height: 2px; /* Line thickness */
  background-color: #000; /* Solid line color */
  transform: translateY(-50%);
  z-index: 2; /* Ensure it appears below players */
}

/* Attack lines (dashed and extended) */
.court .attack-line {
  position: absolute;
  left: -40px; /* Extend beyond the left edge */
  width: calc(100% + 80px); /* Extend beyond the right edge */
  height: 0; /* No height, as it's a border */
  border-top: 2px dashed #000; /* Dashed line */
  z-index: 2; /* Ensure it appears below players */
}

.court .attack-line.top {
  top: calc(50% - 164px); /* 3 meters from the centerline (scaled) */
}

.court .attack-line.bottom {
  top: calc(50% + 162px); /* 3 meters from the centerline (scaled) */
}

/* Zone overlay */
.zone-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3; /* Above the court but below players */
  pointer-events: none; /* Allow interactions with players */
  display: grid;
  grid-template-rows: 30% 20% 20% 30%; /* Adjust row heights for back and front rows */
  grid-template-columns: repeat(3, 1fr); /* Three columns per row */
}

/* Individual zones */
.zone {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.7);
  background-color: rgba(250, 130, 130, 0.083); /* Light red overlay */
  border: 1px solid rgb(0, 0, 0); /* Optional: Add borders for zones */
  pointer-events: none; /* Prevent interaction */
  z-index: 3; /* Above the court but below players */
}

/* Specific zones for front row (2, 3, 4) */
.zone.zone-2,
.zone.zone-3,
.zone.zone-4 {
  grid-row: 2; /* Place in the second row */
}

/* Specific zones for back row (1, 5, 6) */
.zone.zone-1,
.zone.zone-5,
.zone.zone-6 {
  grid-row: 1; /* Place in the first row */
}

/* Specific zones for bottom front row (2, 3, 4) */
.zone.zone-2:nth-child(n + 7),
.zone.zone-3:nth-child(n + 7),
.zone.zone-4:nth-child(n + 7) {
  grid-row: 3; /* Place in the third row */
}

/* Specific zones for bottom back row (1, 5, 6) */
.zone.zone-1:nth-child(n + 7),
.zone.zone-5:nth-child(n + 7),
.zone.zone-6:nth-child(n + 7) {
  grid-row: 4; /* Place in the fourth row */
}

/* Show Zones Button */
.toggle-zones {
  margin-left: auto; /* Push the button to the right of the title */
  padding: 10px;
  width: 100px;
  font-size: 14px;
  background-color: #d55b33;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.toggle-zones:hover {
  background-color: #b54a27;
  transform: scale(1.05);
  transition: all 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.context-menu {
  position: absolute;
  background-color: white;
  border: 1px solid #ccc;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  z-index: 10000;
  padding: 10px;
  border-radius: 5px;
  animation: fadeIn 0.2s ease-in-out;
  display: flex;
  align-items: center; /* Vertically center items */
  justify-content: space-between; /* Add space between the button and the color picker */
  gap: 20px; /* Add more spacing between the delete button and the color picker */
}

.context-menu button {
  background: none;
  border: none;
  color: #f44336; /* Red color for delete */
  cursor: pointer;
  font-size: 14px;
}

.context-menu button:hover {
  font-weight: bold;
}

.color-picker-rectangle {
  width: 30px; /* Width of the rectangle */
  height: 30px; /* Height of the rectangle */
  border: 2px solid #ccc; /* Border around the rectangle */
  border-radius: 5px; /* Rounded corners */
  cursor: pointer; /* Pointer cursor to indicate it's clickable */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional shadow for better visibility */
  transition: transform 0.2s ease-in-out; /* Smooth hover effect */
}

.color-picker-rectangle:hover {
  transform: scale(1.1); /* Slightly enlarge on hover */
  border-color: #888; /* Change border color on hover */
}

.toolbar {
  position: fixed;
  left: 0;
  top: 0;
  height: 100%;
  width: 80px;
  background-color: #e4e4e4;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 10px;
  padding-top: 80px;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
  z-index: 100;
  margin-top: 30px; /* Add margin to avoid overlapping with the header */
  
  .toolbar-item:hover {
    transform: scale(1.1); /* Slightly enlarge on hover */
    transition: transform 0.2s ease-in-out; /* Smooth hover effect */

  }

  .toolbar-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 20px;
    cursor: pointer;

    .shape-preview {
      width: 50px; /* Outer frame width */
      height: 50px; /* Outer frame height */
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;

      /* Shared inner shape styles */
      &::before {
        content: "";
        display: block;
        width: 50px; /* Inner shape width */
        height: 50px; /* Inner shape height */
        border-radius: 5px; /* Rounded edges */
      }

      /* Setter (triangle) */
      &.setter::before {
        width: 0;
        height: 0;
        border-left: 25px solid transparent;
        border-right: 25px solid transparent;
        border-bottom: 45px solid #1e1e1e; /* Dark gray color */
        border-radius: 0; /* No rounded edges for triangle */
      }

      /* Libero (circle) */
      &.libero::before {
        border-radius: 50%; /* Makes it a circle */
        background-color: #1e1e1e; /* Dark gray color */
      }

      /* OH1, OH2, M1, M2, Opposite (squares) */
      &.oh1::before,
      &.oh2::before,
      &.m1::before,
      &.m2::before,
      &.opposite::before {
        border-radius: 5px; /* Rounded edges for squares */
        background-color: #1e1e1e; /* Dark gray color */
      }

      /* X (cross) */
      &.x::before {
        content: "X";
        font-size: 60px;
        color: #1e1e1e; /* Dark gray color */
        display: flex;
        align-items: center;
        justify-content: center;
      }

      /* O (hollow circle) */
      &.o {
        border-radius: 50%; /* Makes it a circle */
        border: 3px solid #1e1e1e; /* Dark gray color */
        background-color: transparent; /* Hollow circle */
      }

      .shape-label {
        position: absolute; /* Position the label inside the shape */
        color: white; /* Ensure the text is visible */
        font-size: 12px; /* Adjust font size */
        text-align: center; /* Center the text */
        width: 100%; /* Match the shape's width */
        height: 100%; /* Match the shape's height */
        display: flex;
        align-items: center; /* Center vertically */
        justify-content: center; /* Center horizontally */
        pointer-events: none; /* Prevent interaction with the label */
        z-index: 2; /* Ensure it appears above the shape */
      }
      /* Adjust label for triangle (setter) */
      &.setter .shape-label {
        transform: translateY(5px); /* Shift the label downward */
      }
    }
  }
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.shape {
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  cursor: grab;
  animation: fadeIn 0.2s ease-in-out;
  z-index: 1;
  border-radius: 5px;
  background-color: inherit; /* Allow dynamic background color */
  opacity: 1 !important;
}

.shape.setter {
  width: 0;
  height: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 45px solid var(--setter-color, #1e1e1e); /* Use CSS variable with fallback */
  background-color: transparent; /* No background for triangles */
  opacity: 1;
  border-radius: 0;
}

/* Libero (circle) */
.shape.libero {
  border-radius: 50%; /* Makes it a circle */
  background-color: #1e1e1e; /* Dark gray color */
  opacity: 1 !important; /* Force full opacity */
}

/* OH1, OH2, M1, M2, Opposite (squares) */
.shape.oh1,
.shape.oh2,
.shape.m1,
.shape.m2,
.shape.opposite {
  border-radius: 5px; /* Rounded edges for squares */
  background-color: #1e1e1e; /* Dark gray color */
  opacity: 1 !important; /* Force full opacity */
}

/* X (cross) */
.shape.x {
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent; /* No background for the "X" */
  border: none; /* Remove any border */
  position: absolute; /* Allow positioning on the court */
  cursor: grab;
  z-index: 1; /* Ensure it appears below the label */
}

.shape.x::before {
  content: "X"; /* Render the "X" */
  font-size: 60px; /* Set the font size */
  font-weight: 100px; /* Make the "X" bold */
  color: #1e1e1e; /* Dark gray color for the "X" */
  display: block;
  text-align: center;
  line-height: 50px; /* Center the "X" vertically */
}

/* Hollow Circle (O) */
.shape.o {
  border-radius: 50%; /* Makes it a circle */
  border: 3px solid #1e1e1e; /* Dark gray color */
  background-color: transparent; /* Hollow circle */
}

/* Text inside the shape */
.shape .shape-label {
  position: absolute;
  color: white; /* Ensure the text is white */
  font-size: 12px; /* Adjust font size */
  text-align: center;
  width: 100%; /* Center the text horizontally */
  height: 100%; /* Center the text vertically */
  display: flex;
  align-items: center; /* Center vertically */
  justify-content: center; /* Center horizontally */
  z-index: 2; /* Ensure it appears above the shape */
  pointer-events: none; /* Prevent interaction with the label */
  opacity: 1 !important; /* Force full opacity */
}

/* Adjust label for triangle (setter) */
.shape.setter .shape-label {
  transform: translateY(25px); /* Shift the label downward for the triangle */
}

/* Ensure no transparency in the zone overlay */
.zone-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3; /* Above the court but below players */
  pointer-events: none; /* Allow interactions with players */
  display: grid;
  grid-template-rows: 30% 20% 20% 30%; /* Adjust row heights for back and front rows */
  grid-template-columns: repeat(3, 1fr); /* Three columns per row */
  background-color: transparent; /* Ensure no background */
  opacity: 1 !important; /* Force full opacity */
}

/* Individual zones */
.zone {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.7);
  background-color: rgba(250, 130, 130, 0.083); /* Light red overlay */
  border: 1px solid rgb(0, 0, 0); /* Optional: Add borders for zones */
  pointer-events: none; /* Prevent interaction */
  z-index: 3; /* Above the court but below players */
  opacity: 1 !important; /* Force full opacity */
}

/* Right section: Annotations and Save */
.right-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px; /* Space between the button and court */
  height: 100%; /* Full height */
  justify-content: center; /* Center content vertically */
  margin-top: 80px; /* Add margin to avoid overlapping with the header */
}

/* Main container for annotations - fixed height */
.annotations-container {
  width: 450px;
  height: 600px; /* Fixed height instead of min-height */
  background-color: #ffffff;
  border: 1px solid #8d8d8d;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  box-sizing: border-box;
  transition: box-shadow 0.2s ease-in-out;
  overflow: hidden; /* Prevent container overflow */
}

/* Frame for annotations - make it scrollable except for input */
.frame {
  width: 360px;
  height: 100%; /* Take full height of parent */
  display: flex;
  flex-direction: column;
  position: relative; /* For sticky positioning of input */
  overflow-x: hidden; /* Prevent horizontal scroll */
  padding-right: 12px; /* Add padding to account for scrollbar width */
  box-sizing: border-box; /* Include padding in width calculation */
}

/* Style the scrollbar for better appearance */
.frame::-webkit-scrollbar {
  width: 8px;
}

.frame::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.frame::-webkit-scrollbar-thumb {
  background: #007bff;
  border-radius: 4px;
}

.frame::-webkit-scrollbar-thumb:hover {
  background: #0056b3;
}

.container:hover {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Frame for annotations and save section */
.frame {
  width: 360px;
  min-height: 512px;
  display: flex;
  flex-direction: column;
  gap: 30px;
  padding-top: 10px;
}

/* Annotations input and button */
.annotations {
  position: sticky;
  top: 0;
  z-index: 10;
  background-color: #ffffff00;
  padding-bottom: 15px;
  margin-bottom: 15px;
  display: flex;
  flex-direction: row;
  gap: 10px;
  width: 100%;
}

.annotations input {
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: 240px;
}
.annotations input:hover {
  border-color: #007bff; /* Change border color on hover */
}

.annotations button {
  padding: 10px 20px;
  font-size: 14px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.annotations button:hover {
  background-color: #0056b3;
  transform: scale(1.05);
  transition: all 0.3s ease;
}

/* Individual annotation styling */
.annotation {
  font-size: 14px;
  color: #333;
  width: calc(100% - 10px); /* Reduce width to avoid scrollbar overlap */
  display: flex; /* Use flexbox for layout */
  justify-content: space-between; /* Space between text and delete button */
  align-items: flex-start; /* Align items at the top */
  margin-bottom: 10px; /* Add spacing between annotations */
  padding: 8px; /* Add some padding inside each annotation */
  border-left: 3px solid #007bff; /* Blue border on the left for visual separation */
  background-color: #f8f9fa; /* Light background for each note */
  border-radius: 4px; /* Rounded corners */
}

.annotation-text {
  flex: 1; /* Take up available space */
  padding-right: 8px; /* Space between text and button */
  min-width: 0; /* Critical for text wrapping in flexbox! */
  word-break: break-word; /* Force breaking at any point if needed */
  overflow-wrap: break-word; /* Break long words if needed */
  white-space: normal; /* Allow text to wrap */
  overflow: hidden; /* Prevent content from overflowing */
}

/* Style for the delete button */
.delete-btn {
  background: none;
  border: none;
  color: #dc3545; /* Red color */
  cursor: pointer;
  font-size: 18px;
  font-weight: bold;
  padding: 0 8px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  flex-shrink: 0; /* Prevent button from shrinking */
  margin-left: 8px; /* Space between text and button */
}

.delete-btn:hover {
  background-color: #dc3545;
  color: white;
}

/* Save Section */
.save-section {
  display: flex;
  align-items: center;
  margin-right: 20px; /* Space between Save Section and Save Button */
}

.save-section label {
  font-size: 14px;
  margin-right: 10px;
}

.save-section select {
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 5px;
}
.save-section select:hover {
  border-color: #007bff; /* Change border color on hover */
}

/* Save Button */
.save-btn {
  margin-right: 20px; /* Space between Save Button and Navigation Button */
  padding: 10px 20px;
  font-size: 14px;
  border: 2px solid #218838;
  color: #218838;
  border-radius: 5px;
  cursor: pointer;
}

.save-btn:hover {
  background-color: rgba(94, 155, 108, 0.5); /* 50% transparent green */
  transition: all 0.3s ease;
}

/* Responsive design for smaller screens */
@media (max-width: 420px) {
  .container {
    width: 100%;
    margin: 0 10px;
  }

  .frame {
    width: 90%;
  }
}

/* Responsive styles for tablets (max-width: 992px) */
@media (max-width: 992px) {
  .main-container {
    flex-direction: column; /* Stack items vertically */
    gap: 2rem;
  }

  .court-container {
    width: 90%; /* Use percentage for flexible width */
    height: auto; /* Let height adjust automatically */
  }

  .court {
    width: 100%; /* Full width of the container */
    height: auto; /* Adjust height automatically */
  }
}

.navigation {
  margin: 20px 0;
  text-align: center;

  .btn {
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 5px;
    text-decoration: none;
    color: white;
    background-color: #007bff;
    border: none;
    cursor: pointer;
  }

  .btn:hover {
    background-color: #0056b3;
  }
}
